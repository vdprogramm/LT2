using System;

public class InsufficientFundsException : Exception
{
    public InsufficientFundsException() { }
    public InsufficientFundsException(string message) : base(message) { }
    public InsufficientFundsException(string message, Exception inner) : base(message, inner) { }
}

public class NegativeAmountException : Exception
{
    public NegativeAmountException() { }
    public NegativeAmountException(string message) : base(message) { }
    public NegativeAmountException(string message, Exception inner) : base(message, inner) { }
}
public class BankAccount
{
    private decimal balance;

    public decimal Balance
    {
        get { return balance; }
    }

    public BankAccount(decimal initialBalance = 0)
    {
        if (initialBalance < 0)
        {
            throw new NegativeAmountException("Initial balance cannot be negative.");
        }
        balance = initialBalance;
    }

    public void Deposit(decimal amount)
    {
        if (amount < 0)
        {
            throw new NegativeAmountException("Deposit amount cannot be negative.");
        }
        balance += amount;
    }

    public void Withdraw(decimal amount)
    {
        if (amount < 0)
        {
            throw new NegativeAmountException("Withdrawal amount cannot be negative.");
        }
        if (balance - amount < 0)
        {
            throw new InsufficientFundsException("Insufficient funds for this withdrawal.");
        }
        balance -= amount;
    }
}

// Main Program
class Program
{
    static void Main(string[] args)
    {
        try
        {
            BankAccount account = new BankAccount(100);
            Console.WriteLine("Initial balance: " + account.Balance);

            account.Deposit(50);
            Console.WriteLine("Balance after deposit: " + account.Balance);

            account.Withdraw(30);
            Console.WriteLine("Balance after withdrawal: " + account.Balance);

            account.Withdraw(150); 
        }
        catch (InsufficientFundsException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        catch (NegativeAmountException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An unexpected error occurred: {ex.Message}");
        }
    }
}
